# Berechtigungen der Ordner müssen zum verwendeten User passen -> im Beispiel rekursiv /opt/ioBroker mit 1000:1000
# Befehl: chown 1000:1000 -R /opt/ioBroker

#! Um dieses Composefile nutzen zu können, muss der offizielle Migrations-Prozess wie in "1_ioBroker_Vorbereitung_Redis" beschrieben abgeschlossen sein!
#! Eine direkte Verwendung von Redis bei einer Neuinstallation von ioBroker ist aktuell (noch) nicht möglich!


version: "3.3"
services:
  iobroker:
    container_name: iobroker
    image: buanet/iobroker:${IOBROKER_VERSION}
    hostname: ${IOBROKER_HOSTNAME}
    restart: unless-stopped
    network_mode: "host"
    environment:
      - USBDEVICES=
      - TZ=Europe/Berlin
      - ZWAVE=false
      - AVAHI=false
      - IOB_STATESDB_TYPE=redis
      - IOB_STATESDB_PORT=6379
      - IOB_STATESDB_HOST=127.0.0.1
      - IOB_OBJECTSDB_TYPE=redis
      - IOB_OBJECTSDB_PORT=6379
      - IOB_OBJECTSDB_HOST=127.0.0.1
      - IOB_STATESDB_PASS= #leave this empty
      - IOB_MULTIHOST=master
      - IOB_ADMINPORT=8081
      - SETGID=1000
      - SETUID=1000
    volumes:
      - '${IOBROKER_PATH}:/opt/iobroker:rw'
    depends_on:
      - redis
 
  redis:
      image: 'bitnami/redis:6.2.14' # latest-tag is not recommended because existing redis-db is not automatically upgradable with image update -> Redis will stop -> Upgrade container manually after db dump and restore afterwards.
      hostname: redis
      container_name: iobroker-redis
      restart: unless-stopped
      user: '1000'  
      network_mode: "host"
      volumes:
          - '${IOBROKER_REDIS_PATH}:/bitnami:rw'
      environment:
          - REDIS_IO_THREADS_DO_READS=yes
          - REDIS_IO_THREADS=4
          - REDIS_PASSWORD= #leave this empty
          - ALLOW_EMPTY_PASSWORD=yes

